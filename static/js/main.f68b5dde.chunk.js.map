{"version":3,"sources":["forms/AddUserForm.js","forms/EditUserForm.js","tables/UserTable.js","App.js","index.js"],"names":["AddUserForm","props","initialFormState","id","name","username","lang","useState","user","setUser","handleInputChange","event","target","value","onSubmit","preventDefault","addUser","alert","type","test-id","onChange","EditUserForm","currentUser","useEffect","updateUser","onClick","setEditing","className","UserTable","users","length","map","key","editRow","deleteUser","colSpan","App","setUsers","setCurrentUser","editing","updatedUser","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f68b5dde.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst AddUserForm = props => {\r\n\tconst initialFormState = { id: null, name: '', username: '', lang: '' }\r\n\tconst [ user, setUser ] = useState(initialFormState)\r\n\r\n\tconst handleInputChange = event => {\r\n\t\tconst { name, value } = event.target\r\n\r\n\t\tsetUser({ ...user, [name]: value })\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form\r\n\t\t\tonSubmit={event => {\r\n\t\t\t\tevent.preventDefault()\r\n\t\t\t\tif (!user.name || !user.username || !user.lang) {\r\n\t\t\t\t\talert('please fill all details');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tprops.addUser(user)\r\n\t\t\t\tsetUser(initialFormState)\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<label>Name</label>\r\n\t\t\t<input type=\"text\" test-id=\"name\" name=\"name\" value={user.name} onChange={handleInputChange} />\r\n\t\t\t<label>Username</label>\r\n\t\t\t<input type=\"text\" test-id=\"username\" name=\"username\" value={user.username} onChange={handleInputChange} />\r\n\t\t\t<label>Language</label>\r\n\t\t\t<select test-id=\"lang\" name=\"lang\" onChange={handleInputChange} value={user.lang}>\r\n\t\t\t\t  <option value=\"select\">Select</option>\r\n                  <option value=\"Java\">Java</option>\r\n                  <option value=\"Python\">Python</option>\r\n\t\t\t\t  <option value=\"Javascript\">Javascript</option>\r\n               </select>\r\n\t\t\t<button>Add new user </button>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default AddUserForm\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nconst EditUserForm = props => {\r\n  const [ user, setUser ] = useState(props.currentUser)\r\n\r\n  useEffect(\r\n    () => {\r\n      setUser(props.currentUser)\r\n    },\r\n    [ props ]\r\n  )\r\n  // You can tell React to skip applying an effect if certain values havenâ€™t changed between re-renders. [ props ]\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target\r\n\r\n    setUser({ ...user, [name]: value })\r\n  }\r\n\r\n  return (\r\n    <form\r\n      onSubmit={event => {\r\n        event.preventDefault()\r\n\r\n        props.updateUser(user.id, user)\r\n      }}\r\n    >\r\n      <label>Name</label>\r\n      <input type=\"text\" name=\"name\" value={user.name} onChange={handleInputChange} />\r\n      <label>Username</label>\r\n      <input type=\"text\" name=\"username\" value={user.username} onChange={handleInputChange} />\r\n      <label>Language</label>\r\n\t\t\t<select test-id=\"lang\" name=\"lang\" onChange={handleInputChange} value={user.lang}>\r\n\t\t\t\t  <option value=\"select\">Select</option>\r\n                  <option value=\"Java\">Java</option>\r\n                  <option value=\"Python\">Python</option>\r\n\t\t\t\t          <option value=\"Javascript\">Javascript</option>\r\n               </select>\r\n      <button>Update user</button>\r\n      <button onClick={() => props.setEditing(false)} className=\"button muted-button\">\r\n        Cancel\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default EditUserForm\r\n","import React from 'react'\r\n\r\nconst UserTable = props => (\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Username</th>\r\n        <th>Language</th>\r\n        <th>Actions</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {props.users.length > 0 ? (\r\n        props.users.map(user => (\r\n          <tr key={user.id}>\r\n            <td>{user.name}</td>\r\n            <td>{user.username}</td>\r\n            <td>{user.lang}</td>\r\n            <td>\r\n              <button\r\n                onClick={() => {\r\n                  props.editRow(user)\r\n                }}\r\n                className=\"button muted-button\"\r\n              >\r\n                Edit\r\n              </button>\r\n              <button\r\n                onClick={() => props.deleteUser(user.id)}\r\n                className=\"button muted-button\"\r\n              >\r\n                Delete\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        ))\r\n      ) : (\r\n        <tr>\r\n          <td colSpan={3}>No users</td>\r\n        </tr>\r\n      )}\r\n    </tbody>\r\n  </table>\r\n)\r\n\r\nexport default UserTable\r\n","import React, { useState, Fragment } from 'react'\r\nimport AddUserForm from './forms/AddUserForm'\r\nimport EditUserForm from './forms/EditUserForm'\r\nimport UserTable from './tables/UserTable'\r\n\r\nconst App = () => {\r\n\t// Data\r\n\tconst usersData = [\r\n\t\t{ id: 1, name: 'Tania', username: 'floppydiskette', lang: 'Java' },\r\n\t\t{ id: 2, name: 'Craig', username: 'siliconeidolon', lang: 'Python' },\r\n\t\t{ id: 3, name: 'Ben', username: 'benisphere', lang: 'Javascript' },\r\n\t]\r\n\r\n\tconst initialFormState = { id: null, name: '', username: '' }\r\n\r\n\t// Setting state\r\n\tconst [ users, setUsers ] = useState(usersData)\r\n\tconst [ currentUser, setCurrentUser ] = useState(initialFormState)\r\n\tconst [ editing, setEditing ] = useState(false)\r\n\r\n\t// CRUD operations\r\n\tconst addUser = user => {\r\n\t\tuser.id = users.length + 1\r\n\t\tsetUsers([ ...users, user ])\r\n\t}\r\n\r\n\tconst deleteUser = id => {\r\n\t\tsetEditing(false)\r\n\r\n\t\tsetUsers(users.filter(user => user.id !== id))\r\n\t}\r\n\r\n\tconst updateUser = (id, updatedUser) => {\r\n\t\tsetEditing(false)\r\n\r\n\t\tsetUsers(users.map(user => (user.id === id ? updatedUser : user)))\r\n\t}\r\n\r\n\tconst editRow = user => {\r\n\t\tsetEditing(true)\r\n\r\n\t\tsetCurrentUser({ id: user.id, name: user.name, username: user.username, lang: user.lang })\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<h1>CRUD Operations</h1>\r\n\t\t\t<div className=\"flex-row\">\r\n\t\t\t\t<div className=\"flex-large\">\r\n\t\t\t\t\t{editing ? (\r\n\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t\t<h2>Edit user</h2>\r\n\t\t\t\t\t\t\t<EditUserForm\r\n\t\t\t\t\t\t\t\tediting={editing}\r\n\t\t\t\t\t\t\t\tsetEditing={setEditing}\r\n\t\t\t\t\t\t\t\tcurrentUser={currentUser}\r\n\t\t\t\t\t\t\t\tupdateUser={updateUser}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t\t<h2>Add user</h2>\r\n\t\t\t\t\t\t\t<AddUserForm addUser={addUser} />\r\n\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"flex-large\">\r\n\t\t\t\t\t<h2>View users</h2>\r\n\t\t\t\t\t<UserTable users={users} editRow={editRow} deleteUser={deleteUser} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}